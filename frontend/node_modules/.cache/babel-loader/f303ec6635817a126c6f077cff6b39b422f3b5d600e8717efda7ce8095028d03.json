{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denys\\\\Desktop\\\\E Pruebas\\\\PS-Equipo5\\\\frontend\\\\my-react-app\\\\src\\\\Pages\\\\TESTt.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TESTt = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    // Define a function to fetch products\n    const fetchProducts = async () => {\n      try {\n        // Make a GET request to your backend API endpoint\n        const response = await axios.get('http://localhost:30001/api/products');\n\n        // Update the component state with the fetched products\n        setProducts(response.data);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n\n    // Call the fetchProducts function when the component mounts\n    fetchProducts();\n  }, []); // Empty dependency array ensures the effect runs only once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", product.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, product._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(TESTt, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = TESTt;\nexport default TESTt;\nvar _c;\n$RefreshReg$(_c, \"TESTt\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TESTt","_s","products","setProducts","fetchProducts","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","name","description","_id","_c","$RefreshReg$"],"sources":["C:/Users/denys/Desktop/E Pruebas/PS-Equipo5/frontend/my-react-app/src/Pages/TESTt.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TESTt = () => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Define a function to fetch products\r\n    const fetchProducts = async () => {\r\n      try {\r\n        // Make a GET request to your backend API endpoint\r\n        const response = await axios.get('http://localhost:30001/api/products');\r\n\r\n        // Update the component state with the fetched products\r\n        setProducts(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n      }\r\n    };\r\n\r\n    // Call the fetchProducts function when the component mounts\r\n    fetchProducts();\r\n  }, []); // Empty dependency array ensures the effect runs only once on component mount\r\n\r\n  return (\r\n    <div>\r\n      <h2>Products</h2>\r\n      <ul>\r\n        {/* Map through the products array and render each product */}\r\n        {products.map((product) => (\r\n          <li key={product._id}>\r\n            <h3>{product.name}</h3>\r\n            <p>Description: {product.description}</p>\r\n            {/* Render other product details as needed */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TESTt;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,qCAAqC,CAAC;;QAEvE;QACAH,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;;IAED;IACAJ,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBf,OAAA;MAAAW,QAAA,EAEGR,QAAQ,CAACa,GAAG,CAAEC,OAAO,iBACpBjB,OAAA;QAAAW,QAAA,gBACEX,OAAA;UAAAW,QAAA,EAAKM,OAAO,CAACC;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBf,OAAA;UAAAW,QAAA,GAAG,eAAa,EAACM,OAAO,CAACE,WAAW;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFlCE,OAAO,CAACG,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIhB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACb,EAAA,CApCID,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AAsCX,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}